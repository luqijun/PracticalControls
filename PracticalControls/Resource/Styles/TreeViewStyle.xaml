<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:enums="clr-namespace:PracticalControls.Enums"
                    xmlns:helpers="clr-namespace:PracticalControls.Common.Helpers">

    <!--TreeViewItem样式-->
    <Style x:Key="PracticalControls.Styles.TreeViewItemStyle" TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MahApps.Styles.TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--TreeViewItem样式-->
    <Style x:Key="PracticalControls.Styles.DragDropTreeViewItemStyle" TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource PracticalControls.Styles.TreeViewItemStyle}">
        <Setter Property="AllowDrop" Value="{Binding CanDrop}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Grid>
                            <Border x:Name="Border" AllowDrop="True"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid x:Name="gridContent" 
                                      Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                      VerticalAlignment="Stretch"
                                      Background="Transparent">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander"
                                                  Grid.Column="0"
                                                  ClickMode="Press"
                                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
                                                  Style="{TemplateBinding mah:TreeViewItemHelper.ToggleButtonStyle}" />
                                    <ContentPresenter x:Name="PART_Header"
                                                      Grid.Column="1"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      ContentSource="Header"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />


                                    <!--拖拽显示样式-->
                                    <Grid Grid.Row="1" Grid.Column="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="5*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid x:Name="dragSameGradeContainer" Grid.Column="0" Grid.ColumnSpan="2">
                                            <Grid x:Name="dragSameGrade" Height="4" Visibility="Collapsed">
                                                <Ellipse Fill="Blue" StrokeThickness="0" Width="4" Height="4" HorizontalAlignment="Left"/>
                                                <Rectangle Fill="Blue" StrokeThickness="0" Height="1" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Grid>
                                        <Grid x:Name="dragNextGradeContainer" Grid.Column="1">
                                            <Grid x:Name="dragNextGrade" Height="4" Visibility="Collapsed">
                                                <Ellipse Fill="Blue" StrokeThickness="0" Width="4" Height="4" HorizontalAlignment="Left"/>
                                                <Rectangle Fill="Blue" StrokeThickness="0" Height="1" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Border>

                            <!--用于检查鼠标移动区域-->
                            <Grid x:Name="rectGrid" Margin="{Binding Margin,ElementName=gridContent}" Visibility="Collapsed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="leftRect" Grid.Column="0" Fill="Transparent"/>
                                <Rectangle x:Name="rightRect" Grid.Column="1" Fill="Transparent"/>
                            </Grid>
                        </Grid>
                        <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding (helpers:TreeViewHelper.IsDragging),RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}}" Value="True">
                            <Setter TargetName="rectGrid" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                        <!--拖拽时显示插入位置-->
                        <EventTrigger SourceName="leftRect" RoutedEvent="Rectangle.DragEnter">
                            <!--自动收缩-->
                            <BeginStoryboard x:Name="ShrinkStoryboard">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="IsExpanded">
                                        <DiscreteObjectKeyFrame Value="{x:Static mah:BooleanBoxes.FalseBox}" KeyTime="0:0:0"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                            <BeginStoryboard x:Name="LeftDragBeginStoryboard">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="dragSameGrade" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger SourceName="leftRect" RoutedEvent="DragLeave">
                            <StopStoryboard BeginStoryboardName="LeftDragBeginStoryboard"/>
                        </EventTrigger>
                        <EventTrigger SourceName="leftRect" RoutedEvent="Drop">
                            <StopStoryboard BeginStoryboardName="LeftDragBeginStoryboard"/>
                        </EventTrigger>

                        <EventTrigger SourceName="rightRect" RoutedEvent="Rectangle.DragEnter">
                            <!--自动展开-->
                            <BeginStoryboard x:Name="ExpandStoryboard">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetProperty="IsExpanded">
                                        <DiscreteObjectKeyFrame Value="{x:Static mah:BooleanBoxes.TrueBox}" KeyTime="0:0:0"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                            <BeginStoryboard x:Name="RightBeginStoryboard">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="dragNextGrade" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger SourceName="rightRect" RoutedEvent="DragLeave">
                            <StopStoryboard BeginStoryboardName="RightBeginStoryboard"/>
                        </EventTrigger>
                        <EventTrigger SourceName="rightRect" RoutedEvent="Drop">
                            <StopStoryboard BeginStoryboardName="RightBeginStoryboard"/>
                        </EventTrigger>

                        <!--可部分Drop-->
                        <DataTrigger Binding="{Binding CanDropToSameGrade}" Value="False">
                            <Setter TargetName="dragSameGradeContainer" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CanDropToNextGrade}" Value="False">
                            <Setter TargetName="dragNextGradeContainer" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <!--拖拽时自动展开-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Visibility,ElementName=dragSameGrade}" Value="Visible"/>
                                <Condition Binding="{Binding CanDropToSameGrade}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsExpanded" Value="False"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Visibility,ElementName=dragNextGrade}" Value="Visible"/>
                                <Condition Binding="{Binding CanDropToNextGrade}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsExpanded" Value="True"/>
                        </MultiDataTrigger>

                        <!--<Trigger SourceName="dragSameGrade" Property="Visibility" Value="Visible">
                            <Setter Property="IsExpanded" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="dragNextGrade" Property="Visibility" Value="Visible">
                            <Setter Property="IsExpanded" Value="True"/>
                        </Trigger>-->

                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=leftRect}" Value="True"/>
                                -->
                        <!--<Condition Binding="{Binding DragDropInsertMode}" Value="{x:Static enums:InsertMode.SameGrade}"/>-->
                        <!--
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="dragSameGrade" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=rightRect}" Value="True"/>
                                -->
                        <!--<Condition Binding="{Binding DragDropInsertMode}" Value="{x:Static enums:InsertMode.NextGrade}"/>-->
                        <!--
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="rectGrid" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="dragNextGrade" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>-->

                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                                <Condition Property="mah:ItemHelper.IsMouseLeftButtonPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                                <Condition Property="mah:ItemHelper.IsMouseRightButtonPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>